import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.BGWP4WZ_.js";const F=JSON.parse('{"title":"系统依赖安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/系统依赖安装.md","filePath":"guide/系统依赖安装.md"}'),l={name:"guide/系统依赖安装.md"};function h(p,s,e,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="系统依赖安装" tabindex="-1">系统依赖安装 <a class="header-anchor" href="#系统依赖安装" aria-label="Permalink to &quot;系统依赖安装&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>本文档提供 py-xiaozhi 项目的完整依赖安装指南，包括系统级依赖和 Python 环境配置。请按照文档顺序进行安装。</p><blockquote><p>兼容范围：Ubuntu <strong>20.04 / 22.04 / 23.10 / 24.04 / 25.xx</strong>。 <strong>Qt 安装来源统一：仅使用 pip 或 conda 安装 PyQt5（不要使用 apt 的 python3-pyqt5）</strong>。ARM Ubuntu（aarch64）强烈推荐 <strong>conda</strong> 安装 PyQt。</p></blockquote><h2 id="系统依赖安装-1" tabindex="-1">系统依赖安装 <a class="header-anchor" href="#系统依赖安装-1" aria-label="Permalink to &quot;系统依赖安装&quot;">​</a></h2><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><h4 id="多媒体组件" tabindex="-1">多媒体组件 <a class="header-anchor" href="#多媒体组件" aria-label="Permalink to &quot;多媒体组件&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 Scoop 安装（推荐）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或使用 Conda</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opus</span></span></code></pre></div><h4 id="手动安装ffmpeg" tabindex="-1">手动安装FFmpeg <a class="header-anchor" href="#手动安装ffmpeg" aria-label="Permalink to &quot;手动安装FFmpeg&quot;">​</a></h4><ol><li>下载：<a href="https://github.com/BtbN/FFmpeg-Builds/releases" target="_blank" rel="noreferrer">BtbN/FFmpeg-Builds</a></li><li>解压后将<code>bin</code>目录添加至系统环境变量<code>PATH</code></li></ol><h4 id="opus音频编解码器" tabindex="-1">Opus音频编解码器 <a class="header-anchor" href="#opus音频编解码器" aria-label="Permalink to &quot;Opus音频编解码器&quot;">​</a></h4><ul><li><p>项目已包含<code>opus.dll</code>，通常无需额外安装</p></li><li><p>如遇问题，可将<code>/libs/windows/opus.dll</code>复制到：</p><ul><li>应用程序运行目录</li><li><code>C:\\Windows\\System32</code></li></ul></li></ul><h3 id="linux-debian-ubuntu" tabindex="-1">Linux (Debian/Ubuntu) <a class="header-anchor" href="#linux-debian-ubuntu" aria-label="Permalink to &quot;Linux (Debian/Ubuntu)&quot;">​</a></h3><blockquote><p>兼容 Ubuntu <strong>20/22/23/24/25</strong>。以下命令对上述版本均适用；个别极简镜像如缺包按提示补装即可。 <strong>请不要安装 apt 的 <code>python3-pyqt5*</code>，Qt 仅走 pip/conda。</strong></p></blockquote><h4 id="核心依赖" tabindex="-1">核心依赖 <a class="header-anchor" href="#核心依赖" aria-label="Permalink to &quot;核心依赖&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新包管理器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装核心依赖（不含 Qt）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portaudio19-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libportaudio2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopus0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopus-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libasound2-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        libxcb-xinerama0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libxkbcommon-x11-0</span></span></code></pre></div><ul><li><p><code>libxcb-xinerama0</code>、<code>libxkbcommon-x11-0</code>：Qt GUI 在部分桌面环境可能缺失的运行库；装上更稳。</p></li><li><p><strong>音频系统</strong>（三选一即可）：</p><ul><li><p>PulseAudio 工具（推荐）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pulseaudio-utils</span></span></code></pre></div></li><li><p>ALSA：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alsa-utils</span></span></code></pre></div></li><li><p>ALSA + 交互工具：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alsa-utils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expect</span></span></code></pre></div></li></ul></li><li><p>提示：Ubuntu 24+ 默认 PipeWire，但 <code>pulseaudio-utils</code> 通过 <code>pipewire-pulse</code> 兼容层仍可用，不影响本项目。</p></li></ul><h4 id="开发工具-可选" tabindex="-1">开发工具（可选） <a class="header-anchor" href="#开发工具-可选" aria-label="Permalink to &quot;开发工具（可选）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span></span></code></pre></div><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 Homebrew 安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portaudio</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gfortran</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcl-tk</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 Xcode 命令行工具（如未安装）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><h2 id="python环境配置" tabindex="-1">Python环境配置 <a class="header-anchor" href="#python环境配置" aria-label="Permalink to &quot;Python环境配置&quot;">​</a></h2><h3 id="方式一-使用miniconda-推荐" tabindex="-1">方式一：使用Miniconda（推荐） <a class="header-anchor" href="#方式一-使用miniconda-推荐" aria-label="Permalink to &quot;方式一：使用Miniconda（推荐）&quot;">​</a></h3><h4 id="_1-下载miniconda" tabindex="-1">1. 下载Miniconda <a class="header-anchor" href="#_1-下载miniconda" aria-label="Permalink to &quot;1. 下载Miniconda&quot;">​</a></h4><table tabindex="0"><thead><tr><th>操作系统</th><th>架构</th><th>下载命令</th></tr></thead><tbody><tr><td><strong>Linux</strong></td><td>x86_64</td><td><code>wget -O Miniconda3-latest-Linux-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</code></td></tr><tr><td><strong>Linux</strong></td><td>ARM64</td><td><code>wget -O Miniconda3-latest-Linux-aarch64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh</code></td></tr><tr><td><strong>macOS</strong></td><td>Intel</td><td><code>wget -O Miniconda3-latest-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh</code></td></tr><tr><td><strong>macOS</strong></td><td>Apple Silicon</td><td><code>wget -O Miniconda3-latest-MacOSX-arm64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh</code></td></tr><tr><td><strong>Windows</strong></td><td>x86_64</td><td><a href="https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe" target="_blank" rel="noreferrer">下载链接</a></td></tr></tbody></table><h4 id="_2-安装miniconda" tabindex="-1">2. 安装Miniconda <a class="header-anchor" href="#_2-安装miniconda" aria-label="Permalink to &quot;2. 安装Miniconda&quot;">​</a></h4><p><strong>Linux/macOS</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加执行权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Miniconda3-latest-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行安装程序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Miniconda3-latest-*.sh</span></span></code></pre></div><p>安装过程中的选择：</p><ol><li>许可协议：按<code>Enter</code>或<code>q</code>跳过，输入<code>yes</code>接受</li><li>安装路径：使用默认路径（推荐）</li><li>初始化：输入<code>yes</code>（推荐）</li></ol><h4 id="_3-配置环境-如需要" tabindex="-1">3. 配置环境（如需要） <a class="header-anchor" href="#_3-配置环境-如需要" aria-label="Permalink to &quot;3. 配置环境（如需要）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如环境变量未自动配置</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;export PATH=&quot;$HOME/miniconda3/bin:$PATH&quot;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化conda</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h4 id="_4-验证安装" tabindex="-1">4. 验证安装 <a class="header-anchor" href="#_4-验证安装" aria-label="Permalink to &quot;4. 验证安装&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h4 id="_5-优化配置" tabindex="-1">5. 优化配置 <a class="header-anchor" href="#_5-优化配置" aria-label="Permalink to &quot;5. 优化配置&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭自动激活base环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto_activate_base</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加conda-forge频道</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span></span></code></pre></div><h3 id="方式二-使用系统python-venv" tabindex="-1">方式二：使用系统Python + venv <a class="header-anchor" href="#方式二-使用系统python-venv" aria-label="Permalink to &quot;方式二：使用系统Python + venv&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 激活虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv/bin/activate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.venv\\Scripts\\activate</span></span></code></pre></div><h2 id="统一-qt-用-pip-conda-安装" tabindex="-1">（统一）Qt 用 pip/conda 安装 <a class="header-anchor" href="#统一-qt-用-pip-conda-安装" aria-label="Permalink to &quot;（统一）Qt 用 pip/conda 安装&quot;">​</a></h2><blockquote><p>仅使用 pip 或 conda 安装 PyQt5，不使用 apt 的 PyQt。 <strong>ARM Ubuntu（aarch64）强烈建议：Conda 安装 PyQt</strong>；x86_64 可用 pip 或 conda。二者不要混用。</p></blockquote><h3 id="路线-b1-conda-安装-pyqt-arm-ubuntu-推荐" tabindex="-1">路线 B1：Conda 安装 PyQt（ARM Ubuntu 推荐） <a class="header-anchor" href="#路线-b1-conda-安装-pyqt-arm-ubuntu-推荐" aria-label="Permalink to &quot;路线 B1：Conda 安装 PyQt（ARM Ubuntu 推荐）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 建议的最小系统依赖（已在“核心依赖”中安装过可跳过）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libportaudio2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portaudio19-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopus0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        libasound2-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libxcb-xinerama0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libxkbcommon-x11-0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建并进入环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> py-xiaozhi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> py-xiaozhi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用 conda 安装 PyQt 与 C++ 运行库（避免 GLIBCXX 问题）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyqt=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libstdcxx-n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgcc-n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PortAudio 绑定（2选1）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># A) 用系统 libportaudio（已 apt 安装）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sounddevice</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># B) 全交给 conda（不依赖系统）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># conda install -c conda-forge -y portaudio jack python-sounddevice</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 确保 requirements.txt 里不要包含 PyQt5</span></span></code></pre></div><h3 id="路线-b2-pip-安装-pyqt-x86-64-较稳-arm-可能无轮子-不推荐" tabindex="-1">路线 B2：pip 安装 PyQt（x86_64 较稳；ARM 可能无轮子，不推荐） <a class="header-anchor" href="#路线-b2-pip-安装-pyqt-x86-64-较稳-arm-可能无轮子-不推荐" aria-label="Permalink to &quot;路线 B2：pip 安装 PyQt（x86\\_64 较稳；ARM 可能无轮子，不推荐）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 若 fallback 到源码构建可能需要的 dev 依赖（仅在失败时再装）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        qtbase5-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qtchooser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qt5-qmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qtmultimedia5-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># venv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv/bin/activate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 PyQt（ARM 若无 manylinux 轮子则会尝试本机构建，失败请改用 conda 方案）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PyQt5==5.15.*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PyQt5-Qt5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PyQt5-sip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 同样不要再装 PyQt5</span></span></code></pre></div><blockquote><p><strong>不要混用</strong>：</p><ul><li>选了 <strong>pip/conda</strong> 的 PyQt，就<strong>不要</strong> <code>apt install python3-pyqt5*</code>。</li><li>选了 <strong>apt</strong> 的 PyQt（本文件已移除该方案），就<strong>不要</strong>再 pip/conda 安装 PyQt。</li></ul></blockquote><h2 id="包管理器优化" tabindex="-1">包管理器优化 <a class="header-anchor" href="#包管理器优化" aria-label="Permalink to &quot;包管理器优化&quot;">​</a></h2><h3 id="换源工具-推荐" tabindex="-1">换源工具（推荐） <a class="header-anchor" href="#换源工具-推荐" aria-label="Permalink to &quot;换源工具（推荐）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows（PowerShell管理员权限）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">winget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RubyMetric.chsrc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> winget</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aslant.top/chsrc.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置pip源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chsrc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span></span></code></pre></div><h3 id="手动配置pip源" tabindex="-1">手动配置pip源 <a class="header-anchor" href="#手动配置pip源" aria-label="Permalink to &quot;手动配置pip源&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用阿里云镜像源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global.index-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.aliyun.com/pypi/simple/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.trusted-host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mirrors.aliyun.com</span></span></code></pre></div><h2 id="项目依赖安装" tabindex="-1">项目依赖安装 <a class="header-anchor" href="#项目依赖安装" aria-label="Permalink to &quot;项目依赖安装&quot;">​</a></h2><h3 id="_1-创建项目环境" tabindex="-1">1. 创建项目环境 <a class="header-anchor" href="#_1-创建项目环境" aria-label="Permalink to &quot;1. 创建项目环境&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用Conda（推荐）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> py-xiaozhi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> py-xiaozhi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或使用venv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vvenv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .venv/bin/activate</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .venv\\Scripts\\activate   # Windows</span></span></code></pre></div><h3 id="_2-安装python依赖" tabindex="-1">2. 安装Python依赖 <a class="header-anchor" href="#_2-安装python依赖" aria-label="Permalink to &quot;2. 安装Python依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements_mac.txt</span></span></code></pre></div><h3 id="_3-验证安装" tabindex="-1">3. 验证安装 <a class="header-anchor" href="#_3-验证安装" aria-label="Permalink to &quot;3. 验证安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查关键依赖（按你选的路线，PyQt 由 conda 或 pip 提供）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;import sounddevice; print(&#39;SoundDevice OK&#39;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;import opuslib; print(&#39;Opus OK&#39;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;import PyQt5.QtCore as q; print(&#39;PyQt5 OK, Qt&#39;, q.QT_VERSION_STR)&quot;</span></span></code></pre></div><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><h4 id="sounddevice安装失败" tabindex="-1">SoundDevice安装失败 <a class="header-anchor" href="#sounddevice安装失败" aria-label="Permalink to &quot;SoundDevice安装失败&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portaudio19-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libasound2-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libportaudio2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portaudio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sounddevice</span></span></code></pre></div><h4 id="pyqt5安装失败" tabindex="-1">PyQt5安装失败 <a class="header-anchor" href="#pyqt5安装失败" aria-label="Permalink to &quot;PyQt5安装失败&quot;">​</a></h4><ul><li><strong>Conda 路线（推荐 ARM）</strong>：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyqt=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libstdcxx-n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgcc-n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span></span></code></pre></div><ul><li><strong>pip 路线（x86_64 为主）</strong>：确认是否有 manylinux 轮子；ARM 若源码构建失败，请改用 conda。</li></ul><h4 id="opus库缺失" tabindex="-1">Opus库缺失 <a class="header-anchor" href="#opus库缺失" aria-label="Permalink to &quot;Opus库缺失&quot;">​</a></h4><ul><li>macOS 用户优先用 conda 安装（否则需自行处理动态库路径）：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opus</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如确有需要：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># nano ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># export DYLD_LIBRARY_PATH=/opt/homebrew/lib:$DYLD_LIBRARY_PATH</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># source ~/.zshrc</span></span></code></pre></div><ul><li>Linux</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopus0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopus-dev</span></span></code></pre></div><ul><li>macOS</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opus</span></span></code></pre></div><h4 id="权限问题-linux" tabindex="-1">权限问题（Linux） <a class="header-anchor" href="#权限问题-linux" aria-label="Permalink to &quot;权限问题（Linux）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将用户添加到audio组</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> audio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $USER</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新登录后生效</span></span></code></pre></div><h2 id="版本要求" tabindex="-1">版本要求 <a class="header-anchor" href="#版本要求" aria-label="Permalink to &quot;版本要求&quot;">​</a></h2><ul><li><strong>Python</strong>: 3.9.13+ (推荐3.10，最高3.11)</li><li><strong>PyQt5</strong>: 5.15+</li><li><strong>SoundDevice</strong>: 0.4.4+</li><li><strong>FFmpeg</strong>: 4.0+</li><li><strong>Opus</strong>: 1.3+</li><li><strong>PortAudio</strong>: 19.0+</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ol><li>建议使用 Conda 环境管理依赖（<strong>ARM Ubuntu 安装 PyQt 强烈推荐 conda</strong>）</li><li>不要与 esp32-server 共用 Conda 环境</li><li>macOS 用户必须使用 <code>requirements_mac.txt</code></li><li>Windows 用户无需手动安装 <code>opus.dll</code></li><li>项目使用 SoundDevice 替代 PyAudio，使用 PyQt5 作为 GUI 框架</li><li>确保系统依赖安装完成后再安装 Python 依赖</li><li>使用国内镜像源可提高下载速度</li><li><strong>不要混用 PyQt 安装来源</strong>：仅使用 <strong>pip 或 conda</strong>，<strong>不要使用 apt 的 python3-pyqt5</strong>*</li></ol>`,78)]))}const c=i(l,[["render",h]]);export{F as __pageData,c as default};
